apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hlf-ca.fullname" . }}
  labels:
{{ include "labels.standard" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "hlf-ca.name" . }}
      release: {{ .Release.Name }}
  # Ensure we allow our pod to be unavailable, so we can upgrade
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/proxyCPU: "50m"
        sidecar.istio.io/proxyCPULimit: "50m"
        sidecar.istio.io/rewriteAppHTTPProbers: "false"
        # trace|debug|info|warning|error|critical|off
        sidecar.istio.io/logLevel: "info"
      labels:
{{ include "labels.standard" . | indent 8 }}
    spec:
      volumes:
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "hlf-ca.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        {{- if (and .Values.config.mountTLS .Values.ingress.tls) }}
        - name: tls-secret
          secret:
            secretName: {{ (index .Values.ingress.tls 0).secretName }}
        {{- end }}
        - name: ca-config
          configMap:
            name: {{ include "hlf-ca.fullname" . }}--config
      initContainers:
        - name: wait-for-db
          image: jwilder/dockerize
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: {{ include "hlf-ca.fullname" . }}--db
          command:
            - sh
            - -c
            - |
              # wait for sidecar proxy
              sleep 10s
              if [ -n "$DB_TYPE" ]; then
                dockerize -wait tcp://$DB_HOST:$DB_PORT -timeout 60s && echo "Database $DB_TYPE on $DB_HOST:$DB_PORT is ready"
              fi
      containers:
        - name: ca
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          workingDir: {{ .Values.global.workingDir }}
          command:
            - sh
            - -c
            - |
              export DB_DATASOURCE="host=$DB_HOST port=$DB_PORT user=$db_username password=$db_password dbname=$DB_DATABASE sslmode=$DB_SSL"
              mkdir -p $FABRIC_CA_HOME
              cp /var/hyperledger/ca_config/ca.yaml $FABRIC_CA_HOME/fabric-ca-server-config.yaml
              if [ {{ .Values.config.type }} = "tls" ]; then
                # Below 2 lines is a workaround. I don't know why $tlsca_caadmin and $tlsca_caadminpw from "crypto-material"
                # is added with /n at end of the string.
                export CA_ADMIN=$(echo $tlsca_caadmin | sed -e 's/[\r\n]//g')
                export CA_PASSWORD=$(echo $tlsca_caadminpw | sed -e 's/[\r\n]//g')
              else
                export CA_ADMIN=$(echo $rca_caadmin | sed -e 's/[\r\n]//g')
                export CA_PASSWORD=$(echo $rca_caadminpw | sed -e 's/[\r\n]//g')
              fi
              sed -i "s|<<<ADMIN>>>|$CA_ADMIN|g" $FABRIC_CA_HOME/fabric-ca-server-config.yaml
              sed -i "s|<<<ADMINPW>>>|$CA_PASSWORD|g" $FABRIC_CA_HOME/fabric-ca-server-config.yaml
              sed -i "s|<<<DB_TYPE>>>|${DB_TYPE:-"sqlite3"}|g" $FABRIC_CA_HOME/fabric-ca-server-config.yaml
              sed -i "s|<<<DB_DATASOURCE>>>|${DB_DATASOURCE:-"fabric-ca-server.db"}|g" $FABRIC_CA_HOME/fabric-ca-server-config.yaml
              # {{- if .Values.config.intermediate }}
              # echo "Adding Parent CA (typically a Root CA) values to $FABRIC_CA_HOME/fabric-ca-server-config.yaml"
              # sed -i "s|<<<PARENT_ADMIN>>>|${PARENT_CA_ADMIN}|g" $FABRIC_CA_HOME/fabric-ca-server-config.yaml
              # sed -i "s|<<<PARENT_ADMINPW>>>|${PARENT_CA_PASSWORD}|g" $FABRIC_CA_HOME/fabric-ca-server-config.yaml
              # {{- end}}
              echo "ðŸš€   fabric-ca-server start"
              fabric-ca-server start
          envFrom:
            - configMapRef:
                name: {{ include "hlf-ca.fullname" . }}--db
            - configMapRef:
                name: {{ include "hlf-ca.fullname" . }}--ca
            - secretRef:
                name: {{ include "hlf-ca.fullname" . }}--db
            - secretRef:
                name: "crypto-material"
          env:
            # {{- if .Values.config.intermediate }}
            # # Intermediate CA is not properly implemented, fix it later
            # - name: PARENT_CA_ADMIN
            #   valueFrom:
            #     secretKeyRef:
            #       name: {{ .Values.config.intermediate.parent.chart }}--ca
            #       key: CA_ADMIN
            # - name: PARENT_CA_PASSWORD
            #   valueFrom:
            #     secretKeyRef:
            #       name: {{ .Values.config.intermediate.parent.chart }}--ca
            #       key: CA_PASSWORD
            #{{- end}}
          ports:
            - name: http
              containerPort: 7054
              protocol: TCP
            - name: http-metrics
              containerPort: 9443
              protocol: TCP
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /healthz
              port: 9443
            initialDelaySeconds: 20
            periodSeconds: 10
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /healthz
              port: 9443
            initialDelaySeconds: 20
            periodSeconds: 10
          volumeMounts:
            - name: data
              mountPath: /var/hyperledger
            - name: ca-config
              readOnly: true
              mountPath: /var/hyperledger/ca_config
            {{- if (and .Values.config.mountTLS .Values.ingress.tls) }}
            - name: tls-secret
              readOnly: true
              mountPath: /var/hyperledger/tls/secret
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
  {{- end }}
