{{- if .Values.updateChannel.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: update-channel
spec:
  activeDeadlineSeconds: 300
  ttlStrategy:
    secondsAfterCompletion: 3600
    secondsAfterSuccess: 3600
    secondsAfterFailure: 3600
  serviceAccountName: workflow
  entrypoint: main

  templates:
    - name: main
      inputs:
        parameters:
          - name: channelname
          - name: update_channel_env
          - name: cacert
          - name: url
      steps:
        - - name: update-channel
            template: update-channel-tmpl
            arguments:
              parameters:
                - name: channelname
                  value: {{ .Values.alias.input_channelname | quote }}
                - name: update_channel_env
                  value: {{ .Values.alias.input_update_channel_env | quote }}
            continueOn:
              failed: true
        - - name: gupload-log
            templateRef:
              name: gupload-up-file
              template: upload-tmpl
            arguments:
              parameters:
                - name: cacert
                  value: {{ .Values.alias.input_cacert | quote }}
                - name: url
                  value: {{ .Values.alias.input_url | quote }}
                - name: infile
                  value: "updatechannel.log"
                - name: outfile
                  value: "updatechannel.log"
                - name: pvc_gupload
                  value: {{ .Values.pvc_gupload }}

    - name: update-channel-tmpl
{{ toYaml .Values.no_istio | indent 6 }}
      inputs:
        parameters:
          - name: channelname
          - name: update_channel_env
      {{- if .Values.hostAlias }}
      hostAliases:
      {{- range .Values.hostAlias }}
        - hostnames:
            {{- range .hostnames }}
            - {{ . }}
            {{- end }}
          ip: {{ .ip }}
      {{- end }}
      {{- end }}
      volumes:
        - name: gupload
          persistentVolumeClaim:
            claimName: {{ .Values.pvc_gupload }}
        - name: fabricfiles
          persistentVolumeClaim:
            claimName: {{ .Values.pvc_fabricfiles }}
        - name: setup-script
          configMap:
            name: "orgadmin--setupsh"
            defaultMode: 0755
        - name: core-yaml
          configMap:
            name: core-yaml
        {{- range .Values.updateChannel.secrets }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
      container:
        image: library/alpine:3.12.0
        command: ["sh", "-c"]
        workingDir: /var/hyperledger
        args:
          - |-
            ENVELOPE="{{ .Values.alias.input_update_channel_env }}"
            CHANNEL_NAME={{ .Values.alias.input_channelname | quote }}
            ORDERER_URL={{ .Values.ordererUrl }}
            FABRIC_CFG_PATH=/etc/hyperledger
            ORDERER_CA=/tmp/org0.com-tlscacert.pem
            CORE_PEER_TLS_ROOTCERT_FILE=/tmp/org1.net-tlscacert.pem
            echo "CHANNEL_NAME: $CHANNEL_NAME"
            echo "ORDERER_URL: $ORDERER_URL"
            . /script/setup.sh
            apk update
            apk upgrade
            apk --no-cache add libc6-compat libstdc++ tzdata
            ./bin/peer version
            ### check config_update exists
            if [ -f "/mnt/$ENVELOPE" ]
            then
              # echo "config_update_in_envelope.pb exists"
              echo "$ENVELOPE exists"
            else
              echo "Error: config_update_in_envelope.pb not found" > /mnt/updatechannel.log
              printMessage "find config_update_in_envelope.pb" 1
            fi
            printHeader "Update channel"
            set -x
            ./bin/peer channel update -f /mnt/$ENVELOPE -c $CHANNEL_NAME -o $ORDERER_URL --tls --cafile $ORDERER_CA >& /tmp/updatechannel.log
            res=$?
            set +x
            cat /tmp/updatechannel.log
            cp /tmp/updatechannel.log /mnt
            printMessage "update channel" $res
        envFrom:
          - configMapRef:
              name: orgadmin--cli
        volumeMounts:
          - mountPath: /mnt
            name: gupload
          - mountPath: /var/hyperledger
            name: fabricfiles
          - name: setup-script
            mountPath: /script/setup.sh
            subPath: setup.sh
          - mountPath: /etc/hyperledger
            name: core-yaml
          {{- range .Values.updateChannel.secrets }}
          - mountPath: {{ .mountPath }}
            name: {{ .name }}
            subPath: {{ .subPath }}
          {{- end }}
      outputs:
        artifacts:
          - name: update-channel
            path: /tmp/
            archive:
              none: {}
            s3:
              key: workflow/{{ .Values.alias.workflow_name }}/{{ .Values.mspId | lower }}/update-channel/
              {{- with .Values.s3 }}
{{ toYaml . | indent 14 }}
              {{- end }}
{{- end }}
