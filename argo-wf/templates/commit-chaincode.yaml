{{- if .Values.commitChaincode.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: commit-chaincode
spec:
  activeDeadlineSeconds: 300
  ttlStrategy:
    secondsAfterCompletion: 3600
    secondsAfterSuccess: 3600
    secondsAfterFailure: 3600
  serviceAccountName: workflow
  entrypoint: main

  templates:
    - name: main
{{ toYaml .Values.no_istio | indent 6 }}
      inputs:
        parameters:
          - name: channelname
          - name: sequence
          - name: version
      {{- if .Values.hostAlias }}
      hostAliases:
      {{- range .Values.hostAlias }}
        - hostnames:
            {{- range .hostnames }}
            - {{ . }}
            {{- end }}
          ip: {{ .ip }}
      {{- end }}
      {{- end }}
      volumes:
        - name: fabricfiles
          persistentVolumeClaim:
            claimName: {{ .Values.pvc_fabricfiles }}
        - name: setup-script
          configMap:
            name: "orgadmin--setupsh"
            defaultMode: 0755
        - name: core-yaml
          configMap:
            name: core-yaml
        {{- range .Values.commitChaincode.secrets }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
      container:
        image: library/alpine:3.12.0
        command: ["sh", "-c"]
        workingDir: /var/hyperledger
        args:
          - |-
            CHANNEL_NAME={{ .Values.alias.input_channelname | quote }}
            ORDERER_URL={{ .Values.ordererUrl }}
            FABRIC_CFG_PATH=/etc/hyperledger
            ORDERER_CA=/tmp/org0.com-tlscacert.pem
            CORE_PEER_TLS_ROOTCERT_FILE=/tmp/org1.net-tlscacert.pem
            echo "CHANNEL_NAME: $CHANNEL_NAME"
            echo "ORDERER_URL: $ORDERER_URL"
            . /script/setup.sh
            apk update
            apk upgrade
            apk --no-cache add libc6-compat libstdc++ tzdata
            ./bin/peer version
            printHeader "checkcommitreadiness"
            set -x
            ./bin/peer lifecycle chaincode checkcommitreadiness \
              -o $ORDERER_URL -C $CHANNEL_NAME --tls --cafile $ORDERER_CA \
              --name {{ .Values.chaincode.id }} --version {{ .Values.alias.input_version }} \
              --init-required --sequence {{ .Values.alias.input_sequence }} >& /tmp/commitreadiness.log
            res=$?
            set +x
            cat /tmp/commitreadiness.log
            printMessage "checkcommitreadiness" $res
            printHeader "commit chaincode"
            # check the tlscacerts
            {{- range .Values.commitChaincode.targets }}
            if [ -d "/tmp/{{ .tlsRootCertFiles }}" ]; then
              echo "{{ .tlsRootCertFiles }} found"
            else
              printMessage "find to {{ .tlsRootCertFiles }}" 1
            fi
            {{- end }}
            set -x
            ./bin/peer lifecycle chaincode commit \
              -o $ORDERER_URL -C $CHANNEL_NAME --tls --cafile $ORDERER_CA \
              --name {{ .Values.chaincode.id }} --version {{ .Values.alias.input_version }} \
              --init-required --sequence {{ .Values.alias.input_sequence }} \
            {{- range .Values.commitChaincode.targets }}
              --peerAddresses {{ .peerAddress }} \
              --tlsRootCertFiles {{ .tlsRootCertFiles }} \
            {{- end }}
              --waitForEvent >& /tmp/commitcc.log
            res=$?
            set +x
            cat /tmp/commitcc.log
            printMessage "commit chaincode" $res
            printHeader "querycommitted chaincode"
            set -x
            ./bin/peer lifecycle chaincode querycommitted \
              -o $ORDERER_URL -C $CHANNEL_NAME --tls --cafile $ORDERER_CA \
            {{- range .Values.commitChaincode.targets }}
              --peerAddresses {{ .peerAddress }} \
              --tlsRootCertFiles /tmp/{{ .tlsRootCertFiles }} \
            {{- end }}
              --name {{ .Values.chaincode.id }} >& /tmp/querycommitted.log
            res=$?
            set +x
            cat /tmp/querycommitted.log
            printMessage "querycommitted chaincode" $res
            printHeader "init chaincode"
            set -x
            ./bin/peer chaincode invoke --isInit \
              -o $ORDERER_URL -C $CHANNEL_NAME --tls --cafile $ORDERER_CA \
              --name {{ .Values.chaincode.id }} -c '{"Args":["Init"]}' \
            {{- range .Values.commitChaincode.targets }}
              --peerAddresses {{ .peerAddress }} \
              --tlsRootCertFiles /tmp/{{ .tlsRootCertFiles }} \
            {{- end }}
              --waitForEvent >& /tmp/initcc.log
            res=$?
            set +x
            cat /tmp/initcc.log
            printMessage "init chaincode" $res
        envFrom:
          - configMapRef:
              name: orgadmin--cli
        volumeMounts:
          - mountPath: /var/hyperledger
            name: fabricfiles
          - name: setup-script
            mountPath: /script/setup.sh
            subPath: setup.sh
          - mountPath: /etc/hyperledger
            name: core-yaml
          {{- range .Values.commitChaincode.secrets }}
          - mountPath: {{ .mountPath }}
            name: {{ .name }}
            subPath: {{ .subPath }}
          {{- end }}
      outputs:
        artifacts:
          - name: commit-chaincode
            path: /tmp/
            archive:
              none: {}
            s3:
              key: workflow/{{ .Values.alias.workflow_name }}/{{ .Values.mspId | lower }}/commit-chaincode/
              {{- with .Values.s3 }}
{{ toYaml . | indent 14 }}
              {{- end }}
{{- end }}
