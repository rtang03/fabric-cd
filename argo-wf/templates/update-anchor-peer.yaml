{{- if .Values.createChannel.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: update-anchor-peer
spec:
  activeDeadlineSeconds: 300
  ttlStrategy:
    secondsAfterCompletion: 3600
    secondsAfterSuccess: 3600
    secondsAfterFailure: 3600
  serviceAccountName: workflow
  entrypoint: main

  templates:
    - name: main
{{ toYaml .Values.no_istio | indent 6 }}
      inputs:
        parameters:
          - name: channelname
          - name: host
          - name: port
      {{- if .Values.hostAlias }}
      hostAliases:
      {{- range .Values.hostAlias }}
        - hostnames:
            {{- range .hostnames }}
            - {{ . }}
            {{- end }}
          ip: {{ .ip }}
      {{- end }}
      {{- end }}
      volumes:
        - name: fabricfiles
          persistentVolumeClaim:
            claimName: {{ .Values.pvc_fabricfiles }}
        - name: setup-script
          configMap:
            name: "orgadmin--setupsh"
            defaultMode: 0755
        - name: core-yaml
          configMap:
            name: core-yaml
        - name: org0-tlscacert
          secret:
            secretName: org0.com-tlscacert
        - name: org1-tlscacert
          secret:
            secretName: org1.net-tlscacert
      container:
        image: library/alpine:3.12.0
        command: ["sh", "-c"]
        workingDir: /var/hyperledger
        args:
          - |-
            CHANNEL_NAME={{ .Values.alias.input_channelname | quote }}
            ORDERER_URL={{ .Values.ordererUrl }}
            FABRIC_CFG_PATH=/etc/hyperledger
            ORDERER_CA=/tmp/org0.com-tlscacert.pem
            CORE_PEER_TLS_ROOTCERT_FILE=/tmp/org1.net-tlscacert.pem
            echo "CHANNEL_NAME: $CHANNEL_NAME"
            echo "ORDERER_URL: $ORDERER_URL"
            . /script/setup.sh
            apk update
            apk upgrade
            apk --no-cache add libc6-compat libstdc++ tzdata jq
            ./bin/peer version
            printHeader "Update anchor peer"
            set -x
            ./bin/peer channel fetch config /tmp/config_block.pb -o $ORDERER_URL -c $CHANNEL_NAME --tls --cafile $ORDERER_CA >& /tmp/fetchconfig.log
            res=$?
            set +x
            printMessage "fetch config_block.pb" $res
            cat /tmp/fetchconfig.log
            set -x
            ./bin/configtxlator proto_decode --input /tmp/config_block.pb --type common.Block --output /tmp/config_block.json
            res=$?
            set +x
            printMessage "decode block0" $res
            set -x
            jq .data.data[0].payload.data.config /tmp/config_block.json > /tmp/config.json
            res=$?
            set +x
            printMessage "jq extract channel" $res
            set -x
            cp /tmp/config.json /tmp/config_copy.json
            res=$?
            set +x
            printMessage "cp block" $res
            set -x
            jq ".channel_group.groups.Application.groups.{{ .Values.mspId }}.values += {\"AnchorPeers\":{\"mod_policy\":\"Admins\",\"value\":{\"anchor_peers\":[{\"host\":\"{{ .Values.alias.input_host }}\",\"port\":{{ .Values.alias.input_port }}}]},\"version\":\"0\"}}" /tmp/config_copy.json > /tmp/modified_config.json
            res=$?
            set +x
            printMessage "jq add anchorpeer" $res
            set -x
            ./bin/configtxlator proto_encode --input /tmp/config.json --type common.Config --output /tmp/config.pb
            res=$?
            set +x
            printMessage "encode current block" $res
            set -x
            ./bin/configtxlator proto_encode --input /tmp/modified_config.json --type common.Config --output /tmp/modified_config.pb
            res=$?
            set +x
            printMessage "encode new block" $res
            set -x
            ./bin/configtxlator compute_update --channel_id $CHANNEL_NAME --original /tmp/config.pb --updated /tmp/modified_config.pb --output /tmp/config_update.pb
            res=$?
            set +x
            # NOTE: if the anchor peer is already made, the compute_update will return below error:
            # "configtxlator: error: Error computing update: error computing config update: no differences detected between original and updated config"
            printMessage "compute update block" $res
            set -x
            ./bin/configtxlator proto_decode --input /tmp/config_update.pb --type common.ConfigUpdate --output /tmp/config_update.json
            res=$?
            set +x
            printMessage "decode update block" $res
            echo "{\"payload\":{\"header\":{\"channel_header\":{\"channel_id\":\"$CHANNEL_NAME\", \"type\":2}},\"data\":{\"config_update\":$(cat /tmp/config_update.json)}}}" | jq . > /tmp/config_update_in_envelope.json
            res=$?
            set +x
            printMessage "create update_envelope" $res
            set -x
            ./bin/configtxlator proto_encode --input /tmp/config_update_in_envelope.json --type common.Envelope --output /tmp/config_update_in_envelope.pb
            res=$?
            set +x
            printMessage "encode update_envelope" $res
            set -x
            ./bin/peer channel update -f /tmp/config_update_in_envelope.pb -o $ORDERER_URL -c $CHANNEL_NAME --tls --cafile $ORDERER_CA >& /tmp/updateanchorpeer.log
            res=$?
            set +x
            cat /tmp/updateanchorpeer.log
            printMessage "send update_envelope proposal" $res
        envFrom:
          - configMapRef:
              name: orgadmin--cli
        volumeMounts:
          - mountPath: /var/hyperledger
            name: fabricfiles
          - name: setup-script
            mountPath: /script/setup.sh
            subPath: setup.sh
          - mountPath: /etc/hyperledger
            name: core-yaml
          - mountPath: /tmp/org0.com-tlscacert.pem
            name: org0-tlscacert
            subPath: tlscacert.pem
          - mountPath: /tmp/org1.net-tlscacert.pem
            name: org1-tlscacert
            subPath: tlscacert.pem
      outputs:
        artifacts:
          - name: update-anchor-peer
            path: /tmp/
            archive:
              none: {}
            s3:
              key: workflow/{{ .Values.alias.workflow_name }}/{{ .Values.mspId | lower }}/update-anchor-peer/
              {{- with .Values.s3 }}
{{ toYaml . | indent 14 }}
              {{- end }}
{{- end }}
