{{- if eq .Values.clusterscope false }}
{{- if .Values.neworg.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: neworg-config-update
spec:
  activeDeadlineSeconds: 600
  ttlStrategy:
    secondsAfterCompletion: 3600 # Time to live after workflow is completed, replaces ttlSecondsAfterFinished
    secondsAfterSuccess: 3600     # Time to live after workflow is successful
    secondsAfterFailure: 3600     # Time to live after workflow fails
  serviceAccountName: workflow
  entrypoint: main

  templates:
    - name: main
      # inputs:
      #   parameters:
      #     - name: cacert
      #     - name: outfile
      #     - name: url
      steps:
        - - name: neworg
            template: neworg-tmpl
        # - - name: gupload
        #     templateRef:
        #       name: gupload-up-file
        #       template: upload-tmpl
        #       clusterScope: false
        #     arguments:
        #       parameters:
        #         - name: cacert
        #           value: { { .Values.alias.input_cacert | quote }}
        #         - name: url
        #           value: { { .Values.alias.input_url | quote }}
        #         - name: infile
        #           value: "config.json"
        #         - name: outfile
        #           value: { { .Values.alias.input_outfile | quote }}
        #         - name: pvc_gupload
        #           value: { { .Values.pvc_gupload }}

    - name: neworg-tmpl
{{ toYaml .Values.no_istio | indent 6 }}
      volumes:
        - name: gupload
          persistentVolumeClaim:
            claimName: {{ .Values.pvc_gupload }}
        - name: fabricfiles
          persistentVolumeClaim:
            claimName: {{ .Values.pvc_fabricfiles }}
        - name: setup-script
          configMap:
            name: "orgadmin--setupsh"
            defaultMode: 0755
        - name: core-yaml
          configMap:
            name: core-yaml
        - name: configtx-yaml
          configMap:
            name: orgadmin--configtx
        - name: org0-tlscacert
          secret:
            secretName: org0.com-tlscacert
      container:
        image: library/alpine:3.12.0
        command: ["sh", "-c"]
        workingDir: /var/hyperledger
        args:
          - |-
            FABRIC_CFG_PATH=/etc/hyperledger
            . /script/setup.sh
            apk update
            apk upgrade
            apk --no-cache add libc6-compat libstdc++ jq
            ./bin/peer version
            if [ -f "/mnt/{{ .Values.neworg.channelConfg }}" ]
            then
              echo "{{ .Values.neworg.channelConfg }} exists"
            else
              printMessage "check config.json" 1
            fi
        envFrom:
          - configMapRef:
              name: orgadmin--cli
        volumeMounts:
          - mountPath: /mnt
            name: gupload
          - mountPath: /var/hyperledger
            name: fabricfiles
          - name: setup-script
            mountPath: /script/setup.sh
            subPath: setup.sh
          - name: configtx-yaml
            mountPath: /configtx
          - mountPath: /etc/hyperledger
            name: core-yaml
          - mountPath: /tmp/tlscacert.pem
            name: org0-tlscacert
            subPath: tlscacert.pem
{{- end }}
{{- end }}
