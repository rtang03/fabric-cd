{{- if .Values.joinChannelOrgx.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: join-channel-orgx
spec:
  activeDeadlineSeconds: 300
  ttlStrategy:
    secondsAfterCompletion: 3600 # Time to live after workflow is completed, replaces ttlSecondsAfterFinished
    secondsAfterSuccess: 3600     # Time to live after workflow is successful
    secondsAfterFailure: 3600     # Time to live after workflow fails
  serviceAccountName: workflow
  entrypoint: main

  templates:
    - name: main
      steps:
        - - name: fetch0
            template: fetch-tmpl
        # - - name: join-channel
        #     templateRef:
        #       name:
        #       template:
        #     arguments:
        #       parameters:
        #         - name:
        #           value:

    - name: fetch-tmpl
{{ toYaml .Values.no_istio | indent 6 }}
      {{- if .Values.hostAlias }}
      hostAliases:
      {{- range .Values.hostAlias }}
        - hostnames:
            {{- range .hostnames }}
            - {{ . }}
            {{- end }}
          ip: {{ .ip }}
      {{- end }}
      {{- end }}
      volumes:
        - name: fabricfiles
          persistentVolumeClaim:
            claimName: {{ .Values.pvc_fabricfiles }}
        - name: setup-script
          configMap:
            name: "orgadmin--setupsh"
            defaultMode: 0755
        - name: core-yaml
          configMap:
            name: core-yaml
        {{- range .Values.joinChannelOrgx.secrets }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
      container:
        image: library/alpine:3.12.0
        command: ["sh", "-c"]
        workingDir: /var/hyperledger
        args:
          - |-
            CHANNEL_NAME={{ .Values.alias.input_channelname | quote }}
            ORDERER_URL={{ .Values.ordererUrl }}
            FABRIC_CFG_PATH=/etc/hyperledger
            ORDERER_CA={{ .Values.joinChannelOrgx.ordererCa }}
            CORE_PEER_TLS_ROOTCERT_FILE={{ .Values.joinChannelOrgx.corePeerTlsRootCert }}
            echo "CHANNEL_NAME: $CHANNEL_NAME"
            echo "ORDERER_URL: $ORDERER_URL"
            . /script/setup.sh
            apk update
            apk upgrade
            apk --no-cache add libc6-compat libstdc++
            ./bin/peer version
            printHeader "Fetch block 0"
            set -x
            ./bin/peer channel fetch 0 /tmp/$CHANNEL_NAME.block -c $CHANNEL_NAME -o $ORDERER_URL --tls --cafile $ORDERER_CA >& /tmp/fetch0.log
            res=$?
            set +x
            cat /tmp/fetch0.log
            printMessage "fetch block 0" $res
            if [ -f "/tmp/$CHANNEL_NAME.block" ]; then
              echo "$CHANNEL_NAME.block found"
            else
              printMessage "find $CHANNEL_NAME.block" 1
            fi
        envFrom:
          - configMapRef:
              name: orgadmin--cli
        volumeMounts:
          - mountPath: /var/hyperledger
            name: fabricfiles
          - name: setup-script
            mountPath: /script/setup.sh
            subPath: setup.sh
          - mountPath: /etc/hyperledger
            name: core-yaml
          {{- range .Values.joinChannelOrgx.secrets }}
          - mountPath: {{ .mountPath }}
            name: {{ .name }}
            subPath: {{ .subPath }}
          {{- end }}
      outputs:
        artifacts:
          - name: join-channel-orgx
            path: /tmp/
            archive:
              none: {}
            s3:
              key: workflow/{{ .Values.alias.workflow_name }}/{{ .Values.mspId | lower }}/join-channel-orgx/
              {{- with .Values.s3 }}
{{ toYaml . | indent 14 }}
              {{- end }}
{{- end }}
