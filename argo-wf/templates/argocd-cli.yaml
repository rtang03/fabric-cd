apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: argocd-cli
spec:
  activeDeadlineSeconds: 300
  ttlStrategy:
    secondsAfterCompletion: 3600 # Time to live after workflow is completed, replaces ttlSecondsAfterFinished
    secondsAfterSuccess: 3600     # Time to live after workflow is successful
    secondsAfterFailure: 3600     # Time to live after workflow fails
  serviceAccountName: workflow
  entrypoint: argocd-app-sync

  templates:
    - name: argocd-app-sync
{{ toYaml .Values.no_istio | indent 6 }}
      {{- if .Values.hostAlias }}
      hostAliases:
        {{- range .Values.hostAlias }}
        - hostnames:
            {{- range .hostnames }}
            - {{ . }}
          {{- end }}
          ip: {{ .ip }}
      {{- end }}
      {{- end }}
      inputs:
        # artifacts:
        #   - name: argocd
        #     path: /usr/local/bin/argocd
        #     mode: 0755
        #     http:
        #       url: http://35.202.107.80/download/argocd-linux-amd64
        #       headers:
        #         name: Host
        #         value: argocd.server
        parameters:
          - name: app
      volumes:
        - name: setup-script
          configMap:
            name: "orgadmin--setupsh"
            defaultMode: 0755
      container:
        image: library/alpine:3.12.0
        command: ["sh", "-c"]
        args:
          - |-
            . /script/setup.sh
            apk update
            apk upgrade
            apk --no-cache add libc6-compat libstdc++ curl
            ### Checking ENV
            if [ -z $ARGOCD_SERVER ]; then
              printMessage "env ARGO_SERVER" 1
            else
              echo "ArgoCD Server: $ARGOCD_SERVER"
            fi
            if [ -z $ARGOCD_AUTH_TOKEN ]; then
              printMessage "load env: ARGOCD_AUTH_TOKEN" 1
            else
              echo "ARGOCD_AUTH_TOKEN found"
            fi
            printHeader "Download argocd binary"
            set -x
            curl -sSL -o /usr/local/bin/argocd http://${ARGOCD_SERVER}/download/argocd-linux-amd64
            res=$?
            set +x
            printMessage "Binary Load" $res
            chmod +x /usr/local/bin/argocd
            printHeader "Argocd App Sync"
            set -x
            argocd version --server "http://$ARGOCD_SERVER" --plaintext
            printMessage "print version" $?
            argocd app sync admin1 --server "http://$ARGOCD_SERVER"
        env:
          - name: ARGOCD_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                name: argocd-cli-jwt
                key: jwt
        envFrom:
          - configMapRef:
              name: orgadmin--cli
        volumeMounts:
          - name: setup-script
            mountPath: /script/setup.sh
            subPath: setup.sh
