{{- if eq .Values.clusterscope false }}
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: download-and-create-secret
spec:
  activeDeadlineSeconds: 300
  # podGC:
  #   strategy: OnPodCompletion
  ttlStrategy:
    secondsAfterCompletion: 3600
    secondsAfterSuccess: 3600
    secondsAfterFailure: 3600
  serviceAccountName: workflow
  entrypoint: main

  templates:
    - name: main
      inputs:
        parameters:
          - name: filename
          - name: key
          - name: secretName
          - name: url
      steps:
        - - name: retrieve
            template: retrieve-tmpl
            arguments:
              parameters:
                - name: filename
                  value: {{ .Values.alias.input_filename | quote }}
                - name: key
                  value: {{ .Values.alias.input_key | quote }}
                - name: secretName
                  value: {{ .Values.alias.input_secretName | quote }}
                - name: url
                  value: {{ .Values.alias.input_url | quote }}
        - - name: delete-secret-tmpl
            templateRef:
              name: secret-resource
              template: delete-secret-tmpl
              clusterScope: false
            arguments:
              parameters:
                - name: secretName
                  value: {{ .Values.alias.input_secretName  | quote }}
              continueOn:
                error: true
                failed: true
        - - name: create-secret-tmpl
            templateRef:
              name: secret-resource
              template: create-secret-1key-tmpl
              clusterScope: true
            arguments:
              parameters:
                - name: secretName
                  value: {{ .Values.alias.input_secretName | quote }}
                - name: key1
                  value: {{ .Values.alias.input_key | quote }}
                - name: value1
                  value: {{ .Values.alias.output_value1 | quote }}

    # Retrieve file via http
    - name: retrieve-tmpl
{{ toYaml .Values.no_istio | indent 6 }}
      volumes:
        - name: gupload
          persistentVolumeClaim:
            claimName: {{ .Values.pvc_gupload }}
        - name: setup-script
          configMap:
            name: "orgadmin--setupsh"
            defaultMode: 0755
      inputs:
        parameters:
          - name: filename
          - name: key
          - name: secretName
          - name: url
        artifacts:
          - name: file
            path: /tmp/{{ .Values.alias.input_filename }}
            http:
              url: {{ .Values.alias.input_url | quote }}
      container:
        image: library/alpine:3.12.0
        command: ["sh", "-c"]
        workingDir: /
        args:
          - |-
            . /script/setup.sh
            FILE="/var/gupload/fileserver/{{ .Values.alias.input_filename }}"
            echo "Retrieving $FILE"
            if [ -f "/tmp/{{ .Values.alias.input_filename }}" ]; then
              echo "file {{ .Values.alias.input_filename }} downloaded"
              printHeader "Send downloaded file to pvc"
              set -x
              cp /tmp/{{ .Values.alias.input_filename }} /var/gupload/fileserver/{{ .Values.alias.input_filename }}
              res=$?
              set +x
              printMessage "/var/gupload/fileserver/{{ .Values.alias.input_filename }} created" $res
              # NOTE: the cert is in base64 format, there is '\n' in each line. When it is passed via templateRef in
              # the "create-secret-tmpl" WorkflowTemplate, the passing parameter cannot process base64 properly.
              # it makes "\n" further escape; the break the base64 format. Here need to remove \n.
              printHeader "Encode"
              set -x
              cat /var/gupload/fileserver/{{ .Values.alias.input_filename }} | tr -d '\r\n' > /tmp/processed_{{ .Values.alias.input_filename }}
              res=$?
              set +x
              printMessage "Encode {{ .Values.alias.input_filename }} found" $res
            else
              echo "file not found"
              exit 1
            fi
        volumeMounts:
          - mountPath: /var/gupload/fileserver
            name: gupload
          - name: setup-script
            mountPath: /script/setup.sh
            subPath: setup.sh
      outputs:
        parameters:
          - name: value1
            valueFrom:
              path:  "/tmp/processed_{{ .Values.alias.input_filename }}"
{{- end }}
