apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gupload.fullname" . }}
  labels:
{{- include "labels.standard" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ include "gupload.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/proxyCPU: "50m"
        sidecar.istio.io/proxyCPULimit: "50m"
        sidecar.istio.io/rewriteAppHTTPProbers: "false"
        # trace|debug|info|warning|error|critical|off
        sidecar.istio.io/logLevel: "info"
      labels:
{{ include "labels.standard" . | indent 8 }}
    spec:
      containers:
        - name: gupload
          image: {{ .Values.global.guploadImage | quote }}
          imagePullPolicy: IfNotPresent
          workingDir: /var/gupload
          ports:
            - containerPort: 1313
              protocol: TCP
              name: tls-request
          command:
            - sh
            - -c
            - |
              echo "### Starting gupload ###"
              /var/gupload/gupload --version
              set -x
              cp /var/gupload/gupload /var/gupload/fileserver
              mkdir -p /var/gupload/fileserver/public
              ls /var/gupload/fileserver/public > /var/gupload/fileserver/public/index.txt
              /var/gupload/gupload serve --key /var/gupload/cert/tls.key --certificate /var/gupload/cert/tls.crt
          volumeMounts:
            - mountPath: /var/gupload/cert
              name: tls
            - mountPath: /var/gupload/fileserver
              name: files
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
      volumes:
        - name: files
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.pvcName }}
        - name: tls
          secret:
            secretName: {{ .Values.secrets.peer.tls }}

