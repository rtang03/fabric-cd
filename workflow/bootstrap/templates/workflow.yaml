apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: bootstrap-
  labels:
    workflows.argoproj.io/archive-strategy: "false"
spec:
  # must complete in 15 min (900 seconds)
  activeDeadlineSeconds: 900
  # keep workflows for 1d (86,400 seconds)
  ttlStrategy:
    secondsAfterCompletion: 86400
  # delete all pods as soon as they complete
  # podGC:
  #   strategy: OnPodCompletion
  serviceAccountName: workflow
  # artifactRepositoryRef:
  #   key: gcp_dev
  entrypoint: channels
  {{- if .Values.hostAlias }}
  hostAliases:
  {{- range .Values.hostAlias }}
    - ip: {{ .ip}}
      hostnames:
        {{- range .hostnames }}
        - {{ . }}
        {{- end }}
  {{- end }}
  {{- end }}

  volumes:
   - name: fabricfiles
     persistentVolumeClaim:
       claimName: {{ .Values.pvcName }}
   - name: setup-script
     configMap:
       name: "orgadmin--setupsh"
       defaultMode: 0777
   - name: core-yaml
     configMap:
       name: {{ .Values.coreyaml }}
  {{- range .Values.secret }}
   - name: {{ .name }}
     secret:
       secretName: {{ .secret }}
  {{- end }}

  templates:
    - name: channels
      steps:
        - - name: create-channel
            template: create-channel-tmpl
        - - name: join-channel
            template: join-channel-tmpl
            arguments:
              artifacts:
                - name: channel-block
                  from: {{ .Values.alias.step_create_channel_outputs | quote }}

    - name: create-channel-tmpl
      metadata:
        annotations:
          sidecar.istio.io/inject: "false"
      inputs:
        artifacts:
          - name: channeltx
            path: /tmp/channel.tx
            s3:
              key: {{ .Values.keyChanneltx | quote }}
              {{- with .Values.s3 }}
{{ toYaml . | indent 14 }}
              {{- end }}
          - name: collection-json
            path: /builders/packaging/connection.json
            raw:
              data: {{ .Values.connection_json | quote }}
          - name: metadata-json
            path: /builders/packaging/metadata.json
            raw:
              data: |
                {{ .Values.metadata_json }}
      container:
        image: library/alpine:3.12.0
        command: ["sh", "-c"]
        workingDir: /var/hyperledger
        args:
          - |-
            . /script/setup.sh
            apk update
            apk upgrade
            apk --no-cache add libc6-compat libstdc++ tzdata
            printHeader "Create channel"
            echo "Fetch block to see if channel has already been created..."
            set -x
            $BIN/peer channel fetch 0 -c $CHANNEL_NAME --tls --cafile $ORDERER_CA -o $ORDERER_URL /tmp/$CHANNEL_NAME.block
            set +x
            if [ -f "/tmp/$CHANNEL_NAME.block" ]
            then
              echo "Channel ${CHANNEL_NAME} is already created. create-channel skipped" | tee /tmp/createchannel.log
            else
              echo "Creating channel $CHANNEL_NAME"
              set -x
              $BIN/peer channel create -o $ORDERER_URL -c $CHANNEL_NAME -f /tmp/channel.tx --outputBlock /tmp/$CHANNEL_NAME.block --tls --cafile $ORDERER_CA >& /tmp/createchannel.log
              res=$?
              set +x
              cat /tmp/createchannel.log
              printMessage "generate $CHANNEL_NAME.block" $res
            fi
        env:
        {{- range .Values.conf }}
          - name: {{ .name }}
            value: {{ .value }}
        {{- end }}
        volumeMounts:
          - mountPath: /var/hyperledger
            name: fabricfiles
          - mountPath: /etc/hyperledger
            name: core-yaml
          - name: setup-script
            mountPath: /script/setup.sh
            subPath: setup.sh
          {{- range .Values.secret }}
          - name: {{ .name }}
            mountPath: /var/hyperledger/crypto-config/channel-artifacts/{{ .secret }}
          {{- end }}
      outputs:
        artifacts:
          - name: channel-block
            path: /tmp/
            archive:
              none: {}
            s3:
              key: workflow/{{ .Values.alias.workflow_name }}/{{ .Values.mspId | lower }}/create-channel/
              {{- with .Values.s3 }}
{{ toYaml . | indent 14 }}
              {{- end }}
    - name: join-channel-tmpl
      metadata:
        annotations:
          sidecar.istio.io/inject: "false"
      inputs:
        artifacts:
          - name: channel-block
            path: /tmp/{{ .Values.channelName }}.block
            s3:
              key: workflow/{{ .Values.alias.workflow_name }}/{{ .Values.mspId | lower }}/create-channel/{{ .Values.channelName }}.block
              {{- with .Values.s3 }}
{{ toYaml . | indent 14 }}
              {{- end }}
      container:
        image: library/alpine:3.12.0
        command: ["sh", "-c"]
        workingDir: /var/hyperledger
        args:
          - |-
            . /script/setup.sh
            apk update
            apk upgrade
            apk --no-cache add libc6-compat libstdc++ jq tzdata
            printHeader "Join channel"
            sleep 1s
            set -x
            $BIN/peer channel getinfo -c $CHANNEL_NAME >& /tmp/getinfo.log
            res=$?
            set +x
            if [ $res = 1 ]; then
              set -x
              $BIN/peer channel join -b /tmp/$CHANNEL_NAME.block >& /tmp/joinchannel.log
              res=$?
              set +x
              cat /tmp/joinchannel.log
              printMessage "join channel" $res
            else
              echo "channel already joined. join-channel skipped" | tee /tmp/joinchannel.log
            fi
        env:
          {{- range .Values.conf }}
          - name: {{ .name }}
            value: {{ .value }}
          {{- end }}
        volumeMounts:
          - mountPath: /var/hyperledger
            name: fabricfiles
          - mountPath: /etc/hyperledger
            name: core-yaml
          - name: setup-script
            mountPath: /script/setup.sh
            subPath: setup.sh
          {{- range .Values.secret }}
          - name: {{ .name }}
            mountPath: /var/hyperledger/crypto-config/channel-artifacts/{{ .secret }}
          {{- end }}
      outputs:
        artifacts:
          - name: join-channel-log
            path: /tmp/
            archive:
              none: {}
            s3:
              key: workflow/{{ .Values.alias.workflow_name }}/{{ .Values.mspId | lower }}/join-channel/
              {{- with .Values.s3 }}
{{ toYaml . | indent 14 }}
              {{- end }}

