apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: external-secret-
spec:
  # must complete in 1 min (600 seconds)
  activeDeadlineSeconds: 600
  # keep workflows for 1d (3600 seconds)
  ttlStrategy:
    secondsAfterCompletion: 3600
  # delete all pods as soon as they complete
  # podGC:
  #   strategy: OnWorkflowSuccess
  serviceAccountName: workflow
  entrypoint: external-secret-tmpl
  # artifactRepositoryRef:
  #   key: gcp_dev

  templates:
    - name: external-secret-tmpl
      steps:
        - - name: delete
            template: delete
            continueOn:
              error: true
              failed: true
        - - name: retrieve
            template: retrieve
        - - name: create
            template: create
            arguments:
              parameters:
                - name: content
                  value: {{ .Values.inputAlias.retrieveStep | quote }}

    - name: retrieve
      inputs:
        artifacts:
          - name: secret
            path: /tmp/file
            s3:
              endpoint: storage.googleapis.com
              bucket: {{ .Values.bucket }}
              key: {{ .Values.artifactKey | quote }}
              accessKeySecret:
                name: gcp-s3-credentials
                key: accessKey
              secretKeySecret:
                name: gcp-s3-credentials
                key: secretKey
      container:
        image: library/alpine:3.12.0
        command: ["sh", "-c"]
        args:
          - |-
            cat /tmp/file | base64 | tee /tmp/encodedfile
      outputs:
        parameters:
          - name: encoded-file
            valueFrom:
              path: /tmp/encodedfile
      metadata:
        annotations:
          sidecar.istio.io/inject: "false"
    - name: delete
      resource:
        action: delete
        manifest: |
          apiVersion: v1
          kind: Secret
          metadata:
            name: {{ .Values.secretName | quote }}
      metadata:
        annotations:
          sidecar.istio.io/inject: "false"
    - name: create
      inputs:
        parameters:
          - name: content
      resource:
        action: create
        manifest: |
          apiVersion: v1
          kind: Secret
          metadata:
            name: {{ .Values.secretName | quote }}
          data:
            {{ .Values.key | quote }}: {{ .Values.inputAlias.encodedContent | quote }}
      metadata:
        annotations:
          sidecar.istio.io/inject: "false"

