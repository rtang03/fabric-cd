{{- if .Values.joinChannel.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "hlf-operator.fullname" . }}--joinchannel
  labels:
{{- include "labels.standard" . | nindent 4 }}
spec:
  backoffLimit: 0
  parallelism: 1
  completions: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      restartPolicy: Never
      {{- if .Values.joinChannel.hostAlias }}
      hostAliases:
        {{- range .Values.joinChannel.hostAlias }}
        - hostnames:
            {{- range .hostnames }}
            - {{ . }}
          {{- end }}
          ip: {{ .ip }}
      {{- end }}
      {{- end }}
      volumes:
        - name: fabricfiles
          persistentVolumeClaim:
            claimName: {{ .Values.joinChannel.orgadmin.pvcName }}
        - name: upload
          persistentVolumeClaim:
            claimName: {{ .Values.joinChannel.gupload.pvcName }}
        - name: setup-script
          configMap:
            name: {{ .Values.global.config.setupsh }}
            defaultMode: 0777
        - name: core-yaml
          configMap:
            name: {{ .Values.global.config.coreyaml }}
        {{- range .Values.joinChannel.secret }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secret }}
        {{- end }}
      containers:
        - name: updatechannel
          image: library/alpine:3.12.0
          command: ["sh", "-c"]
          workingDir: /var/hyperledger
          args:
            - |-
              . /script/setup.sh
              apk update
              apk upgrade
              apk --no-cache add libc6-compat libstdc++
              $BIN/peer version
              ########
              # Step 1: fetch block 0
              ########
              export TMP={{ .Values.global.workingDir }}/uploaded/tmp/{{ include "hlf-operator.fullname" . }}
              printHeader "Fetch block 0"
              set -x
              rm -r $TMP
              mkdir -p $TMP
              $BIN/peer channel fetch 0 $TMP/${CHANNEL_NAME}.block -c $CHANNEL_NAME -o ${ORDERER_URL} --tls --cafile ${ORDERER_CA} >& $TMP/fetch0.log
              res=$?
              set +x
              printMessage "fetch block 0" $res
              cat $TMP/fetch0.log
              ########
              # Step 2: join channel
              ########
              printHeader "Join channel"
              set -x
              $BIN/peer channel join -b $TMP/${CHANNEL_NAME}.block >& $TMP/joinchannel.log
              res=$?
              set +x
              printMessage "join channel" $res
              cat $TMP/joinchannel.log
              set -x
              $BIN/peer channel list
              res=$?
              set +x
              printMessage "peer channel list" $res
          envFrom:
            - configMapRef:
                name: {{ include "hlf-operator.fullname" . }}--cli
          volumeMounts:
            # this mount will share the "peer" binary
            - mountPath: /var/hyperledger
              name: fabricfiles
            # this job will also mount the gupload pvc, under /var/hyperledger/uploaded
            - mountPath: {{ .Values.global.workingDir }}/uploaded
              name: upload
            # this will enable "peer" cli to run
            - mountPath: /etc/hyperledger
              name: core-yaml
            - name: setup-script
              mountPath: /script/setup.sh
              subPath: setup.sh
            {{- range .Values.joinChannel.secret }}
            - name: {{ .name }}
              mountPath: {{ .path }}
            {{- end }}
{{- end }}
