apiVersion: argoproj.io/v1alpha1
kind: WorkflowEventBinding
metadata:
  name: event-consumer
spec:
  event:
    selector: payload.message != "" && discriminator == "my-discriminator"
    # selector: payload.message != "" && metadata["x-argo"] == ["true"] && discriminator == "my-discriminator"
  submit:
    workflowTemplateRef:
      name: simple-echo
    arguments:
      parameters:
        - name: message
          valueFrom:
            event: payload.message
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowEventBinding
metadata:
  name: event-pull-tlscacert
spec:
  event:
    selector: payload.file != "" && payload.secret != "" && payload.key != "" && payload.path != "" && payload.pvc != "" && payload.url != "" && discriminator == "pull-tlscacert"
  submit:
    workflowTemplateRef:
      name: download-and-create-secret
    arguments:
      parameters:
        - name: file
          valueFrom:
            event: payload.file
        - name: key
          valueFrom:
            event: payload.key
        - name: path
          valueFrom:
            event: payload.path
        # TODO: IMPORTANT NOTE: currently, there is only one Argo Server for org0/org1. Later phase,
        # we will split, so that each new org will have its own Argo-Server, the below mounted volume
        # need modify
        - name: pvc
          valueFrom:
            event: payload.pvc
        - name: secret
          valueFrom:
            event: payload.secret
        - name: url
          valueFrom:
            event: payload.url
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowEventBinding
metadata:
  name: event-fetch-block
spec:
  event:
    selector: payload.address != "" && discriminator == "fetch-block"
  submit:
    workflowTemplateRef:
      name: fetch-block-tmpl
    arguments:
      parameters:
        - name: address
          valueFrom:
            event: payload.address
